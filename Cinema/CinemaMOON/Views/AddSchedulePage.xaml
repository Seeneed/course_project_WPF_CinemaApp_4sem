<Page
    x:Class="CinemaMOON.Views.AddSchedulePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:CinemaMOON.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CinemaMOON.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:CinemaMOON.Models"
    xmlns:vm="clr-namespace:CinemaMOON.ViewModels"
    Title="AddSchedulePage"
    d:DesignHeight="900"
    d:DesignWidth="1400"
    Background="{DynamicResource PageBackgroundColor}"
    mc:Ignorable="d">

    <Page.Resources>

        <SolidColorBrush x:Key="GoldAccentBrush" Color="#D7B472" />
        <SolidColorBrush x:Key="BrightGoldAccentBrush" Color="#FFD700" />
        <SolidColorBrush x:Key="PrimaryTextBrush" Color="#E0E0E0" />
        <SolidColorBrush x:Key="DarkElementBackgroundBrush" Color="#1C1C1C" />
        <SolidColorBrush x:Key="SlightlyLighterDarkBrush" Color="#2A2A2A" />
        <SolidColorBrush x:Key="ErrorTextBrush" Color="#FF6B6B" />

        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ResourceKeyToValueConverter x:Key="ResourceKeyConverter" />

        <Style x:Key="PageBackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="42" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="←" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScheduleInputTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="CaretBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="Margin" Value="10,0,10,5" />
            <Setter Property="MinHeight" Value="34" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                                <Setter TargetName="Bd" Property="Background" Value="#282828" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#444" />
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ErrorTextBrush}" />
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        </Style>

        <Style x:Key="AdminComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border
                            x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1">
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="F1 M 0,0 L 2.667,2.667 L 5.333,0 L 0,0 Z"
                                    Fill="{StaticResource GoldAccentBrush}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="arrow" Property="Fill" Value="#666" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScheduleComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="Margin" Value="10,0,10,5" />
            <Setter Property="MinHeight" Value="34" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                            </Grid.ColumnDefinitions>
                            <Popup
                                x:Name="PART_Popup"
                                Grid.ColumnSpan="2"
                                AllowsTransparency="true"
                                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border
                                    x:Name="dropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="{StaticResource DarkElementBackgroundBrush}"
                                    BorderBrush="{StaticResource GoldAccentBrush}"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <Border
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <ToggleButton
                                    x:Name="toggleButton"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource AdminComboBoxToggleButtonStyle}" />
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                IsHitTestVisible="false"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ErrorTextBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                            Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SlightlyLighterDarkBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScheduleLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,15,10,2" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="ScheduleErrorTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ErrorTextBrush}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="12,0,10,15" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="MinHeight" Value="20" />
        </Style>

        <Style x:Key="ScheduleAddButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="Padding" Value="20,10" />
            <Setter Property="Margin" Value="0,25,0,0" />
            <Setter Property="MinWidth" Value="250" />
            <Setter Property="Height" Value="40" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SlightlyLighterDarkBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#353535" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter TargetName="border" Property="Background" Value="#383838" />
                                <Setter Property="BorderBrush" Value="#555" />
                                <Setter Property="Foreground" Value="#999" />
                                <Setter Property="Cursor" Value="No" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="15,10,15,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Command="{Binding GoBackCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Page}}"
                Style="{StaticResource PageBackButtonStyle}" />
            <TextBlock
                Grid.Column="1"
                Margin="15,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="30"
                FontWeight="SemiBold"
                Foreground="{StaticResource GoldAccentBrush}"
                Text="{DynamicResource AddSchedulePage_Title}" />
        </Grid>

        <Border
            Grid.Row="1"
            Width="600"
            Padding="30"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="{StaticResource DarkElementBackgroundBrush}"
            CornerRadius="5">
            <StackPanel VerticalAlignment="Center">
                <TextBlock
                    Margin="10,0,10,25"
                    FontSize="24"
                    FontWeight="SemiBold"
                    Foreground="{StaticResource PrimaryTextBrush}"
                    Text="{Binding MovieTitle}"
                    TextAlignment="Center"
                    TextWrapping="Wrap" />

                <TextBlock Style="{StaticResource ScheduleLabelStyle}" Text="{DynamicResource AddSchedulePage_Label_Date}" />
                <TextBox
                    x:Name="DateTextBox"
                    MaxLength="10"
                    Style="{StaticResource ScheduleInputTextBoxStyle}"
                    Text="{Binding ShowDateString, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Style="{StaticResource ScheduleErrorTextStyle}"
                    Text="{Binding DateError}"
                    Visibility="{Binding IsDateErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock Style="{StaticResource ScheduleLabelStyle}" Text="{DynamicResource AddSchedulePage_Label_Time}" />
                <TextBox
                    x:Name="TimeTextBox"
                    MaxLength="5"
                    Style="{StaticResource ScheduleInputTextBoxStyle}"
                    Text="{Binding ShowTimeString, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Style="{StaticResource ScheduleErrorTextStyle}"
                    Text="{Binding TimeError}"
                    Visibility="{Binding IsTimeErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock Style="{StaticResource ScheduleLabelStyle}" Text="{DynamicResource AddSchedulePage_Label_Hall}" />
                <ComboBox
                    x:Name="HallComboBox"
                    ItemsSource="{Binding AvailableHalls}"
                    SelectedItem="{Binding SelectedHall, Mode=TwoWay}"
                    Style="{StaticResource ScheduleComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Hall}">
                            <TextBlock Text="{Binding Name, Converter={StaticResource ResourceKeyConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock
                    Style="{StaticResource ScheduleErrorTextStyle}"
                    Text="{Binding HallError}"
                    Visibility="{Binding IsHallErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <Button
                    Command="{Binding AddScheduleCommand}"
                    Content="{DynamicResource AddSchedulePage_Button_Add}"
                    IsDefault="True"
                    Style="{StaticResource ScheduleAddButtonStyle}" />

            </StackPanel>
        </Border>
    </Grid>
</Page>