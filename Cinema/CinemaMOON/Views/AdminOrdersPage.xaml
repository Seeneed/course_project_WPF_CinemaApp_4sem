<Page
    x:Class="CinemaMOON.Views.AdminOrdersPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:CinemaMOON.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:CinemaMOON.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:CinemaMOON.ViewModels"
    Title="AdminOrdersPage"
    d:DesignHeight="900"
    d:DesignWidth="1400"
    Background="{DynamicResource PageBackgroundColor}"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadOrdersCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Page.Resources>

        <converters:ResourceKeyToValueConverter x:Key="ResourceKeyToValueConverter" />
        <converters:SeatsToStringConverter x:Key="SeatsConverter" />

        <SolidColorBrush x:Key="GoldAccentBrush" Color="#D7B472" />
        <SolidColorBrush x:Key="BrightGoldAccentBrush" Color="#FFD700" />
        <SolidColorBrush x:Key="PrimaryTextBrush" Color="#E0E0E0" />
        <SolidColorBrush x:Key="DarkElementBackgroundBrush" Color="#1C1C1C" />
        <SolidColorBrush x:Key="SlightlyLighterDarkBrush" Color="#2A2A2A" />
        <SolidColorBrush x:Key="SelectionBackgroundBrush" Color="#4A4A4A" />
        <SolidColorBrush x:Key="GridLineBrush" Color="#444" />

        <Style x:Key="AdminComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border
                            x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1">
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="F1 M 0,0 L 2.667,2.667 L 5.333,0 L 0,0 Z"
                                    Fill="{StaticResource GoldAccentBrush}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="arrow" Property="Fill" Value="#666" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AdminComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="Margin" Value="0,5" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                            </Grid.ColumnDefinitions>
                            <Popup
                                x:Name="PART_Popup"
                                Grid.ColumnSpan="2"
                                AllowsTransparency="true"
                                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border
                                    x:Name="dropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="{StaticResource DarkElementBackgroundBrush}"
                                    BorderBrush="{StaticResource GoldAccentBrush}"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <Border
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <ToggleButton
                                    x:Name="toggleButton"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource AdminComboBoxToggleButtonStyle}" />
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                IsHitTestVisible="false"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                            Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource SlightlyLighterDarkBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PageBackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="42" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="←" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AdminOrderControlButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="Padding" Value="15,10" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SlightlyLighterDarkBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#353535" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter TargetName="border" Property="Background" Value="#383838" />
                                <Setter Property="BorderBrush" Value="#555" />
                                <Setter Property="Foreground" Value="#999" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OrdersDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineBrush}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="RowBackground" Value="Black" />
            <Setter Property="AlternatingRowBackground" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="GridLinesVisibility" Value="All" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        </Style>

        <Style x:Key="OrdersDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="BorderThickness" Value="0,0,1,1" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
        </Style>

        <Style x:Key="AdminOrdersDataGridCellContentTextStyle" TargetType="TextBlock">
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="OrdersDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OrdersDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{Binding Path=AlternatingRowBackground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#353535" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectionBackgroundBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Page.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Command="{Binding GoBackCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Page}}"
                Style="{StaticResource PageBackButtonStyle}" />

            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="30"
                FontWeight="SemiBold"
                Foreground="{StaticResource GoldAccentBrush}"
                Text="{DynamicResource AdminOrdersPage_Title}" />
        </Grid>

        <StackPanel
            Grid.Row="1"
            Margin="0,0,0,10"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <TextBlock
                Margin="0,0,10,0"
                VerticalAlignment="Center"
                FontSize="22"
                Foreground="{StaticResource GoldAccentBrush}"
                Text="{DynamicResource AdminOrdersPage_Filter_Label}" />
            <ComboBox
                MinWidth="250"
                VerticalAlignment="Center"
                DisplayMemberPath="DisplayName"
                ItemsSource="{Binding OrderStatusFilters}"
                SelectedItem="{Binding SelectedOrderStatusFilter}"
                Style="{StaticResource AdminComboBoxStyle}" />
        </StackPanel>

        <Border
            Grid.Row="2"
            BorderBrush="{StaticResource GoldAccentBrush}"
            BorderThickness="1"
            CornerRadius="3">
            <DataGrid
                Background="{DynamicResource PageBackgroundColor}"
                CellStyle="{StaticResource OrdersDataGridCellStyle}"
                ColumnHeaderStyle="{StaticResource OrdersDataGridColumnHeaderStyle}"
                ItemsSource="{Binding AllOrders}"
                RowStyle="{StaticResource OrdersDataGridRowStyle}"
                SelectedItem="{Binding SelectedOrder, Mode=TwoWay}"
                Style="{StaticResource OrdersDataGridStyle}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="2*" Header="{DynamicResource AdminOrdersGrid_Header_UserEmail}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding User.Email}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="2*" Header="{DynamicResource AdminOrdersGrid_Header_Movie}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding Schedule.Movie.Title}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1.2*" Header="{DynamicResource AdminOrdersGrid_Header_Date}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding Schedule.ShowTime, StringFormat='dd.MM.yyyy'}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="0.8*" Header="{DynamicResource AdminOrdersGrid_Header_Time}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding Schedule.ShowTime, StringFormat='HH:mm'}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1.2*" Header="{DynamicResource AdminOrdersGrid_Header_Hall}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding Schedule.Hall.Name, Converter={StaticResource ResourceKeyToValueConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1.5*" Header="{DynamicResource AdminOrdersGrid_Header_Seats}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding Seats, Converter={StaticResource SeatsConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1*" Header="{DynamicResource AdminOrdersGrid_Header_Price}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding TotalPrice, StringFormat='{}{0:N2} BYN'}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1.3*" Header="{DynamicResource AdminOrdersGrid_Header_Status}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}" Text="{Binding OrderStatus, Converter={StaticResource ResourceKeyToValueConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="1*" Header="{DynamicResource AdminOrdersGrid_Header_Rating}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    Style="{StaticResource AdminOrdersDataGridCellContentTextStyle}"
                                    Text="{Binding UserRating, FallbackValue='N/A'}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <StackPanel
            Grid.Row="3"
            Margin="0,15,0,0"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Command="{Binding CancelOrderCommand}"
                Content="{DynamicResource AdminOrdersPage_CancelOrderButton}"
                Style="{StaticResource AdminOrderControlButton}" />
            <Button
                Command="{Binding DeleteOrderCommand}"
                Content="{DynamicResource AdminOrdersPage_DeleteOrderButton}"
                Style="{StaticResource AdminOrderControlButton}" />
            <Button
                Command="{Binding SetViewedCommand}"
                Content="{DynamicResource AdminOrdersPage_SetViewedButton}"
                Style="{StaticResource AdminOrderControlButton}" />
        </StackPanel>
    </Grid>
</Page>