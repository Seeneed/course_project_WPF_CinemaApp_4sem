<Page
    x:Class="CinemaMOON.Views.ChangePasswordPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:CinemaMOON.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:CinemaMOON.ViewModels"
    Title="ChangePasswordPage"
    d:DesignHeight="900"
    d:DesignWidth="1400"
    Background="{DynamicResource PageBackgroundColor}"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="GoldAccentBrush" Color="#D7B472" />
        <SolidColorBrush x:Key="BrightGoldAccentBrush" Color="#FFD700" />
        <SolidColorBrush x:Key="PrimaryTextBrush" Color="#E0E0E0" />
        <SolidColorBrush x:Key="DarkElementBackgroundBrush" Color="#1C1C1C" />
        <SolidColorBrush x:Key="SlightlyLighterDarkBrush" Color="#2A2A2A" />
        <SolidColorBrush x:Key="ErrorTextBrush" Color="#FF6B6B" />

        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:PasswordBoxesConverter x:Key="PasswordBoxesConverter" />

        <Style x:Key="PageBackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="42" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="←" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ChangePasswordLabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,10,10,2" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style x:Key="ChangePasswordInputStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            <Setter Property="CaretBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="Margin" Value="10,0,10,5" />
            <Setter Property="MinHeight" Value="34" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="PasswordChar" Value="●" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                                <Setter TargetName="Bd" Property="Background" Value="#282828" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#444" />
                                <Setter Property="Foreground" Value="#888" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=IsOldPasswordErrorVisible}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ErrorTextBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsNewPasswordErrorVisible}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ErrorTextBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsConfirmPasswordErrorVisible}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource ErrorTextBrush}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsOldPasswordErrorVisible}" Value="False" />
                                    <Condition Binding="{Binding Path=IsNewPasswordErrorVisible}" Value="False" />
                                    <Condition Binding="{Binding Path=IsConfirmPasswordErrorVisible}" Value="False" />
                                    <Condition Binding="{Binding Path=IsFocused}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        </Style>

        <Style x:Key="ChangePasswordErrorTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ErrorTextBrush}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="12,0,10,5" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="ChangePasswordButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DarkElementBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource GoldAccentBrush}" />
            <Setter Property="Padding" Value="20,10" />
            <Setter Property="Margin" Value="0,25,0,0" />
            <Setter Property="MinWidth" Value="250" />
            <Setter Property="Height" Value="40" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SlightlyLighterDarkBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#353535" />
                                <Setter Property="BorderBrush" Value="{StaticResource BrightGoldAccentBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource BrightGoldAccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter TargetName="border" Property="Background" Value="#383838" />
                                <Setter Property="BorderBrush" Value="#555" />
                                <Setter Property="Foreground" Value="#999" />
                                <Setter Property="Cursor" Value="No" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="15,10,15,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Command="{Binding GoBackCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Page}}"
                Style="{StaticResource PageBackButtonStyle}" />

            <TextBlock
                Grid.Column="1"
                Margin="15,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="30"
                FontWeight="SemiBold"
                Foreground="{StaticResource GoldAccentBrush}"
                Text="{DynamicResource ChangePasswordPage_Title}" />
        </Grid>

        <Border
            Grid.Row="1"
            Width="600"
            Padding="30"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="{StaticResource DarkElementBackgroundBrush}"
            BorderBrush="{StaticResource GoldAccentBrush}"
            BorderThickness="1"
            CornerRadius="5">

            <StackPanel VerticalAlignment="Center">

                <TextBlock Style="{StaticResource ChangePasswordLabelStyle}" Text="{DynamicResource ChangePasswordPage_Label_OldPassword}" />
                <PasswordBox x:Name="OldPasswordBox" Style="{StaticResource ChangePasswordInputStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordChanged">
                            <i:InvokeCommandAction Command="{Binding OldPasswordChangedCommand}">
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PasswordBoxesConverter}">
                                        <Binding ElementName="OldPasswordBox" />
                                        <Binding ElementName="NewPasswordBox" />
                                        <Binding ElementName="ConfirmPasswordBox" />
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </PasswordBox>
                <TextBlock
                    Style="{StaticResource ChangePasswordErrorTextStyle}"
                    Text="{Binding OldPasswordError}"
                    Visibility="{Binding IsOldPasswordErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock Style="{StaticResource ChangePasswordLabelStyle}" Text="{DynamicResource ChangePasswordPage_Label_NewPassword}" />
                <PasswordBox x:Name="NewPasswordBox" Style="{StaticResource ChangePasswordInputStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordChanged">
                            <i:InvokeCommandAction Command="{Binding NewPasswordChangedCommand}">
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PasswordBoxesConverter}">
                                        <Binding ElementName="OldPasswordBox" />
                                        <Binding ElementName="NewPasswordBox" />
                                        <Binding ElementName="ConfirmPasswordBox" />
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </PasswordBox>
                <TextBlock
                    Style="{StaticResource ChangePasswordErrorTextStyle}"
                    Text="{Binding NewPasswordError}"
                    Visibility="{Binding IsNewPasswordErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock Style="{StaticResource ChangePasswordLabelStyle}" Text="{DynamicResource ChangePasswordPage_Label_ConfirmPassword}" />
                <PasswordBox x:Name="ConfirmPasswordBox" Style="{StaticResource ChangePasswordInputStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordChanged">
                            <i:InvokeCommandAction Command="{Binding ConfirmPasswordChangedCommand}">
                                <i:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource PasswordBoxesConverter}">
                                        <Binding ElementName="OldPasswordBox" />
                                        <Binding ElementName="NewPasswordBox" />
                                        <Binding ElementName="ConfirmPasswordBox" />
                                    </MultiBinding>
                                </i:InvokeCommandAction.CommandParameter>
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </PasswordBox>
                <TextBlock
                    Style="{StaticResource ChangePasswordErrorTextStyle}"
                    Text="{Binding ConfirmPasswordError}"
                    Visibility="{Binding IsConfirmPasswordErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <Button
                    Command="{Binding ChangePasswordCommand}"
                    Content="{DynamicResource ChangePasswordPage_Button_Change}"
                    IsDefault="True"
                    Style="{StaticResource ChangePasswordButtonStyle}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource PasswordBoxesConverter}">
                            <Binding ElementName="OldPasswordBox" />
                            <Binding ElementName="NewPasswordBox" />
                            <Binding ElementName="ConfirmPasswordBox" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</Page>